version: 2.1
jobs:
  build_page_html:
    docker:
      - image: circleci/python:3.7-stretch
    steps:
      - checkout
      - run: pip install --user -r requirements.txt
      - run:
          name: Build site intermediate files
          command: jupyter-book build .

      # Persist the built files for the deploy step
      - persist_to_workspace:
          root: .
          paths:
            - _build/

  doc:
    docker:
      - image: circleci/python:3.7-stretch
    steps:
      - prepare_jekyll_installation
      - run:
          name: Build the website
          command: bundle exec jekyll build --baseurl /0/html/

      # Tell Circle to store the documentation output in a folder that we can access later
      - store_artifacts:
          path: _site/
          destination: html

  # Deploy the built site to nordicesmhub.github.io
  deploy:
    docker:
      - image: circleci/python:3.7-stretch
    steps:
      # Add deployment key fingerprint for CircleCI to use for a push
      - add_ssh_keys:
          fingerprints:
            - "81:53:e3:9f:f9:8d:82:26:a3:b8:ae:2b:92:42:8f:49"

      - prepare_jekyll_installation
      - run:
          name: Build the website for deploy
          command: bundle exec jekyll build

      # Deploy the built site with ghp-import
      - run:
          name: Deploying site using ghp-import
          command: |
            pip install ghp-import
            ghp-import -p -f -n ./_site/


# Tell CircleCI to use this workflow when it builds the site
workflows:
  version: 2
  default:
    jobs:
      - build_page_html:
          filters:
            branches:
              ignore:
                - gh-pages
      - doc:
          requires:
            - build_page_html
          filters:
            branches:
              ignore:
                - gh-pages
      - deploy:
          requires:
            - build_page_html
          filters:
              branches:
                only:
                  - master
                ignore:
                  - gh-pages

commands:
  prepare_jekyll_installation:
    steps:
      - checkout
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: /tmp/workspace

      # Grab the the built intermediate files from the last step
      - run:
          name: Copy over built site files
          command: |
            rm -rf ./_build
            cp -r /tmp/workspace/_build .

      # Install miniconda to test install
      - run:
          name: install miniconda
          command: |
            export MINICONDA=$HOME/miniconda
            echo "export PATH=$MINICONDA/bin:$PATH" >> $BASH_ENV
            source $BASH_ENV
            hash -r
            wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
            bash miniconda.sh -b -f -p $MINICONDA
            conda config --set always_yes yes
            #conda update conda
            conda info -a
            conda create -n testenv python=3.7.0
            source activate testenv
            rm miniconda.sh

      # Install Ruby/Jekyll dependencies
      - run:
          name: Installing Ruby/Jekyll from conda-forge
          command: conda install -c conda-forge rb-github-pages

      # Build the book's HTML w/ the base_url for CircleCI artifacts
      - run:
          name: Install book Ruby dependencies
          command: bundle install
